// Generated by ts-to-zod
import { z } from 'zod';
import { HuntStatus, HuntAccessType, ChallengeType, OptionType, MissionType } from './../../openapi/HuntHubTypes';

export const huntStatusSchema = z.nativeEnum(HuntStatus);

export const locationSchema = z.object({
  lat: z.number(),
  lng: z.number(),
  radius: z.number(),
});

export const huntAccessTypeSchema = z.nativeEnum(HuntAccessType);

export const challengeTypeSchema = z.nativeEnum(ChallengeType);

export const optionTypeSchema = z.nativeEnum(OptionType);

export const missionTypeSchema = z.nativeEnum(MissionType);

export const clueSchema = z.object({
  title: z.string().optional(),
  description: z.string().optional(),
});

export const missionSchema = z.object({
  title: z.string().optional(),
  description: z.string().optional(),
  targetAsset: z.string().optional(),
  targetLocation: locationSchema.optional(),
  type: missionTypeSchema.optional(),
});

export const taskSchema = z.object({
  title: z.string().optional(),
  description: z.string().optional(),
  target: z.string().optional(),
});

export const optionSchema = z.object({
  id: z.string(),
  text: z.string(),
});

export const quizSchema = z.object({
  title: z.string().optional(),
  description: z.string().optional(),
  target: optionSchema.optional(),
  type: optionTypeSchema.optional(),
  distractors: z.array(optionSchema).optional(),
});

export const userSchema = z.object({
  id: z.string(),
  firebaseUid: z.string(),
  email: z.string(),
  firstName: z.string().optional(),
  lastName: z.string().optional(),
  displayName: z.string().optional(),
  profilePicture: z.string().optional(),
  bio: z.string().optional(),
  createdAt: z.string().datetime().optional(),
  updatedAt: z.string().datetime().optional(),
});

export const huntAccessSchema = z.object({
  huntId: z.string(),
  userId: z.string(),
  accessType: huntAccessTypeSchema,
  sharedAt: z.string().datetime(),
});

export const challengeSchema = z.union([clueSchema, quizSchema, missionSchema, taskSchema]).and(
  z.object({
    clue: clueSchema.optional(),
    quiz: quizSchema.optional(),
    mission: missionSchema.optional(),
    task: taskSchema.optional(),
  }),
);

export const stepCreateSchema = z.object({
  type: challengeTypeSchema,
  challenge: challengeSchema,
  requiredLocation: locationSchema.optional(),
  hint: z.string().optional(),
  timeLimit: z.number().optional(),
  maxAttempts: z.number().optional(),
});

export const stepSchema = z.object({
  id: z.string(),
  huntId: z.string().optional(),
  type: challengeTypeSchema.optional(),
  challenge: challengeSchema,
  requiredLocation: locationSchema.optional(),
  hint: z.string().optional(),
  timeLimit: z.number().optional(),
  maxAttempts: z.number().optional(),
  createdAt: z.string().datetime().optional(),
  updatedAt: z.string().datetime().optional(),
});

export const huntCreateSchema = z.object({
  name: z.string(),
  description: z.string().optional(),
  startLocation: locationSchema.optional(),
  steps: z.array(stepCreateSchema).optional(),
});

export const huntSchema = z.object({
  id: z.string(),
  creatorId: z.string(),
  name: z.string(),
  description: z.string().optional(),
  currentVersion: z.number(),
  status: huntStatusSchema,
  startLocation: locationSchema.optional(),
  steps: z.array(stepSchema).optional(),
  createdAt: z.string().datetime().optional(),
  updatedAt: z.string().datetime().optional(),
});
